#!/usr/bin/env zsh
# Author - Haron Prime
# License WTFPL  http://www.wtfpl.net/

previous_value=`cat /tmp/haron/ChU`
if [[ -z $previous_value || $previous_value -eq 0 ]]; then
    echo "<fc=#0e0></fc>" > /tmp/haron/UP
    actual_value=`checkupdates | wc -l`
    if [[ $actual_value -gt 0 ]]; then 
        if [[ $actual_value -eq 1 ]]; then
            unit='package'
        elif [[ $actual_value -gt 1 ]]; then
            unit='packages'
        fi
        echo $actual_value > /tmp/haron/ChU
        echo "<action=XMUpdateNew><fc=#fb0> $actual_value $unit can be updated</fc></action>" > /tmp/haron/UP
    else 
        echo "<fc=#0e0></fc>" > /tmp/haron/UP
        sleep 3 &&
        echo "<action=XMUpdateNew><fc=#ccc></fc></action>" > /tmp/haron/UP
    fi
else
    urxvtc -name update -e yay -Syu &&
    while [[ -n $(pgrep yay) ]]; do 
        sleep 1
    done
    actual_value=`checkupdates | wc -l`
    if [[ $actual_value -eq 0 ]]; then
        echo $actual_value > /tmp/haron/ChU
        echo "<fc=#0e0> System is up to date</fc>" > /tmp/haron/UP
        sleep 3 &&
        echo "<action=XMUpdateNew><fc=#ccc></fc></action>" > /tmp/haron/UP
    else
        if [[ $actual_value -eq 1 ]]; then
            unit='package'
        elif [[ $actual_value -gt 1 ]]; then
            unit='packages'
        fi
        echo $actual_value > /tmp/haron/ChU
        echo "<action=XMUpdateNew><fc=#fb0> Update do not complete! $actual_value $unit not updated!</fc></action>" > /tmp/haron/UP
    fi
fi
exit 0
