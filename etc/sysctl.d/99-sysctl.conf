# Author - Haron Prime
# License - WTFPL http://www.wtfpl.net/

# Изменить размер дискового кеша и поведение подкачки.
# vm.vfs_cache_pressure = 100
vm.vfs_cache_pressure = 1000
vm.swappiness = 50

# Настраиваем управление выделением памяти
vm.overcommit_ratio = 100
vm.overcommit_memory = 1
vm.dirty_background_bytes = 4194304
vm.dirty_bytes = 4194304
vm.dirty_writeback_centisecs = 60000
vm.dirty_expire_centisecs = 60000
vm.dirty_ratio = 10
vm.dirty_background_ratio = 5
vm.laptop_mode = 0

# Увеличиваем число одновременно открытых файлов
fs.file-max = 1000000

# Максимальное количество объектов inotify, которые может создать один пользователь
fs.inotify.max_user_watches = 16777216

# Максимальное количество событий, которые могут находиться в очереди
fs.inotify.max_queued_events = 65536

fs.suid_dumpable = 0

# Включаем управление ядром с помощью SysRQ
kernel.sysrq = 1


### Настройки сетевого стека

# Отключаем IPv6
# net.ipv6.conf.all.disable_ipv6 = 1
# net.ipv6.conf.enp3s0.disable_ipv6 = 1

# Устанавливаем механизм ожидания по умолчанию для сетей Linux
# net.core.default_qdisc=fq
# net.core.default_qdisc=fq_codel
# net.core.default_qdisc=pfifo_fast

# Количество multicast соединений для одного сокета
net.ipv4.igmp_max_memberships = 50

# Устанавливаем размер буфера приема/передачи данных для всех соединений
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864

# Устанавливаем максимальное число допустимых в системе сокетов TCP
net.ipv4.tcp_max_orphans = 65536

# Устанавливаем время сохранения сокета в состоянии FIN-WAIT-2 после его закрытия локальной стороной
net.ipv4.tcp_fin_timeout = 10

# Устанавливаем как часто следует проверять соединение, если оно давно не используется, интервал передачи проб и время, по истечении которого соединение будет разорвано при отсутствии откликов
net.ipv4.tcp_keepalive_time = 1800
net.ipv4.tcp_keepalive_intvl = 15
net.ipv4.tcp_keepalive_probes = 5

# Увеличиваем количество одновременных полуоткрытых соединений
net.ipv4.tcp_max_syn_backlog = 9999

# Устанавливаем число попыток повтора передачи пакетов SYNACK для пассивных соединений TCP
net.ipv4.tcp_synack_retries = 1

# Общие настройки потребления памяти для протокола TCP.
net.ipv4.tcp_mem = 50576   64768   196304

# Максимальное количество страниц памяти, разрешенное для всех TCP сокетов
net.ipv4.tcp_rmem = 4096 87380 33554432

# Минимальное, принятое по умолчанию и максимальное количество памяти, резервируемой для буферов передачи сокета TCP
net.ipv4.tcp_wmem = 4096 65536 33554432

# Число неудачных попыток, после которого уничтожается соединение TCP, закрытое на локальной стороне
net.ipv4.tcp_orphan_retries = 0

# Разрешаем временные метки протокола TCP
net.ipv4.tcp_timestamps = 1

# Разрешаем выборочные подтверждения протокола TCP
net.ipv4.tcp_sack = 1

# Протокол, используемый для управления нагрузкой в сетях TCP
# net.ipv4.tcp_congestion_control = htcp
net.ipv4.tcp_congestion_control = bbr

# Не сохранять результаты измерений TCP соединения в кеше при его закрытии
net.ipv4.tcp_no_metrics_save = 1

# Отключаем IP-форвардинг
net.ipv4.ip_forward = 1

# Активируем защиту от IP-спуфинга.
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.lo.rp_filter = 1
net.ipv4.conf.enp3s0.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

# Устраняем ARP Flux Problem
net.ipv4.conf.all.arp_filter = 1
net.ipv4.conf.default.arp_filter = 1

# Запрещаем маршрутизацию от источника.
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.lo.accept_source_route = 0
net.ipv4.conf.enp3s0.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

# Отключение приема перенаправлений
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

# Защита против неправильных сообщений об ошибках
net.ipv4.icmp_ignore_bogus_error_responses = 1

# Не отвечаем на ICMP ECHO запросы, переданные широковещательными пакетами
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Можно вообще не отвечать на ICMP ECHO запросы (сервер не будет пинговаться)
net.ipv4.icmp_echo_ignore_all = 1

# Разрешаем повторное использование TIME-WAIT сокетов в случаях, если протокол считает это безопасным.
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1

# Разрешаем динамическое изменение размера окна TCP стека
net.ipv4.tcp_window_scaling = 1

# Защищаемся от TIME_WAIT атак.
net.ipv4.tcp_rfc1337 = 1

# Увеличиваем диапазон локальных портов, доступных для установки исходящих подключений
net.ipv4.ip_local_port_range = 1024 65535

# Максимальное число открытых сокетов, ждущих соединения
net.core.somaxconn = 15000

# Mаксимальное количество пакетов в очереди на обработку, если интерфейс получает пакеты быстрее, чем ядро может их обработать.
net.core.netdev_max_backlog = 1000

# Размер буфера приема данных по умолчанию для всех соединений.
net.core.rmem_default=65536

# Размер буфера передачи данных по умолчанию для всех соединений.
net.core.wmem_default=65536

# Максимальный размер буфера приема данных для всех соединений.
net.core.rmem_max = 16777216

# Максимальный размер буфера передачи данных для всех соединений.
net.core.wmem_max = 16777216

net.ipv4.tcp_syncookies = 1

# Увеличение кол-ва отслеживаемых соединений
net.netfilter.nf_conntrack_max = 1048576
net.nf_conntrack_max = 1048576

# Уменьшаем таймауты
net.netfilter.nf_conntrack_generic_timeout = 120
net.netfilter.nf_conntrack_tcp_timeout_established = 120
net.netfilter.nf_conntrack_tcp_timeout_max_retrans = 120
net.netfilter.nf_conntrack_tcp_timeout_unacknowledged = 120
net.netfilter.nf_conntrack_udp_timeout_stream = 60

# Увеличиваем количество записей в ARP-кэше
net.ipv4.neigh.default.gc_thresh1 = 1024
net.ipv4.neigh.default.gc_thresh2 = 2048
net.ipv4.neigh.default.gc_thresh3 = 4096
